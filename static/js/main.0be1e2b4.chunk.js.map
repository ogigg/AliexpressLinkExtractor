{"version":3,"sources":["actions.js","reducers.js","store.js","Components/InstructionModal.jsx","Components/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["textBoxLowerChange","text","type","initialState","inputUpper","inputLower","inputText","state","action","Object","assign","store","createStore","InstructionModal","props","React","useState","open","setOpen","useEffect","handleClose","e","window","close","title","visible","onOk","onCancel","className","TextArea","Input","Context","createContext","name","localState","Typography","Paragraph","subscribe","getState","console","log","getUrlFromSharedLink","url","createCORSRequest","getUrl","a","exec","method","xhr","XMLHttpRequest","Promise","resolve","reject","desiredUrl","onload","responseText","send","handleClick","input","regexp","linksFoundArray","matchAll","fixedLinksArray","shareLinksFoundArray","returnedString","shareLinksString","map","link","push","promises","promise","dispatch","fixLinks","connect","instructionDialog","setInstructionDialog","textbox","setTextbox","textAreaRef","useRef","notification","useNotification","api","contextHolder","openNotification","info","message","placement","Cookies","get","set","LowerInput","flex","class","onChange","target","value","ref","autoSize","minRows","maxRows","split","href","Provider","justify","style","whiteSpace","extra","QuestionCircleOutlined","onClick","GithubOutlined","align","xs","span","offset","lg","block","minWidth","styles","wordWrap","textToCopy","length","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","defaultChecked","TITLE","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0be1e2b4.chunk.js","sourcesContent":["export const CHANGE_TBXUPPER = 'CHANGE_TBXUPPER'\r\nexport const CHANGE_TBXLOWER = 'CHANGE_TBXLOWER'\r\nexport const FIX_IT = 'FIX_IT'\r\nexport const CLEAR = 'CLEAR'\r\n\r\n\r\n/*\r\n * other constants\r\n */\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function textBoxUpperChange(text) {\r\n    return { type: CHANGE_TBXUPPER, text }\r\n  }\r\nexport function textBoxLowerChange(text) {\r\n    return { type: CHANGE_TBXLOWER, text }\r\n  }\r\nexport function btnClicked() {\r\n    return { type: FIX_IT }\r\n  }\r\nexport function clear() {\r\n    return { type: CLEAR }\r\n  }\r\n\r\n// export function addTodo(text) {\r\n//   return { type: ADD_TODO, text }\r\n// }\r\n\r\n// export function toggleTodo(index) {\r\n//   return { type: TOGGLE_TODO, index }\r\n// }\r\n\r\n// export function setVisibilityFilter(filter) {\r\n//   return { type: SET_VISIBILITY_FILTER, filter }\r\n// }","import {  CHANGE_TBXUPPER,  CHANGE_TBXLOWER, FIX_IT, CLEAR } from './actions'\r\n\r\n\r\n\r\n\r\n// const initialState = {inputUpper : \"paste link here\", inputLower : \"\"}\r\n// const initialState = {inputUpper : \"https://pl.aliexpress.com/item/32787862558.html?af=3655323&cv=36268018&cn=43q71mdx04jc5bheft2sggk8kuc4c8b7&dp=v5_43q71mdx04jc5bheft2sggk8kuc4c8b7&utm_source=epn&utm_medium=cpa&utm_campaign=3655323&utm_content=36268018&afref=https%3A%2F%2Fali.zacenta.pl%2Fnowe%2F&aff_platform=api&sk=CHRNZDvW&aff_trace_key=76456ce0fbc54606826494c2b12ed8bd-1583953557541-03460-CHRNZDvW&terminal_id=7b9d09c431664beeae9d079a1be37929&aff_request_id=76456ce0fbc54606826494c2b12ed8bd-1583953557541-03460-CH\"\r\nconst initialState = {inputUpper : \"https://pl.aliexpress.com/item/32787862558.html?af=3655323&cv=36268018&cn=43q71mdx04jc5bheft2sggk8kuc4c8b7&dp=v5_43q71mdx04jc5bheft2sggk8kuc4c8b7&utm_source=epn&utm_medium=cpa&utm_campaign=3655323&utm_content=36268018&afref=https%3A%2F%2Fali.zacenta.pl%2Fnowe%2F&aff_platform=api&sk=CHRNZDvW&aff_trace_key=76456ce0fbc54606826494c2b12ed8bd-1583953557541-03460-CHRNZDvW&terminal_id=7b9d09c431664beeae9d079a1be37929&aff_request_id=76456ce0fbc54606826494c2b12ed8bd-1583953557541-03460-CH\\nhttps://a.aliexpress.com/_d9leh4R\"\r\n, inputLower : \"\"}\r\n\r\nfunction inputText(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHANGE_TBXUPPER:\r\n            return Object.assign({}, state, {\r\n                inputUpper: action.text\r\n                })\r\n        case CHANGE_TBXLOWER:\r\n            return Object.assign({}, state, {\r\n                inputLower: action.text\r\n                })\r\n        case FIX_IT:\r\n            return Object.assign({}, state, {\r\n                inputLower: state.inputUpper\r\n                })\r\n        case CLEAR:\r\n            return Object.assign({}, state, {\r\n                inputUpper:\"paste link here\",\r\n                inputLower: \"\"\r\n                })\r\n        default:\r\n        return state\r\n\r\n    // For now, don't handle any actions\r\n    // and just return the state given to us.\r\n    return state\r\n  }\r\n}\r\n\r\nexport default inputText","import { createStore } from 'redux'\r\nimport inputText from './reducers'\r\n\r\n\r\nconst store = createStore(inputText)\r\nexport default store;","\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport '../App.css'\r\n\r\n\r\n\r\nconst InstructionModal = (props) =>{\r\n\r\n    const [open, setOpen] = React.useState(props.open);\r\n\r\n\r\n    useEffect(() => {\r\n        if(props.open)\r\n        setOpen(props.open);\r\n\r\n      }, [props.open]);\r\n\r\n      \r\n\r\n    const handleClose = e => {\r\n        window.close();\r\n        // setOpen(false);\r\n        // props.setInstructionDialog(false)\r\n        };\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n        <Modal\r\n          title=\"Manual / Instrukcja użytkowania\"\r\n          visible={open}\r\n          onOk={handleClose}\r\n          onCancel={handleClose}\r\n          className = \"modal\"\r\n\r\n        >\r\n        <p>Just paste ugly aliexpress link and get beautiful one! \r\n            Just paste ugly links into upper text box and click fix it!\r\n            You can choose between links in text format and clickable links by using switch. \r\n            Works for trashy links, links from all language versions of aliexpress and links from mobile app.</p>\r\n        <p>BTW By using this website you agree to our use of cookies</p>\r\n        <br></br>\r\n        <p>Wklej w górnym polu linki do aliexpress z różnych wersji jezykowych,\r\n            z różnymi śmieciami w linku lub w różnych formach (np z aplikacji),\r\n            kliknij \"fix it\" i ciesz się pięknymi linkami których możesz używać\r\n            z godnością i dzielić się nimi z przyjaciółmi.\r\n            Możesz wybrać pomiędzy listą w formacie tekstowym a klikalnymi odnośnikami używając przełącznika.</p>\r\n        <p>Przy okazji, Korzystając z tej strony akceptujesz to, że ta strona korzysta z cookies</p>\r\n        \r\n        </Modal>\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default InstructionModal;\r\n\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Layout, PageHeader, Breadcrumb, Button } from 'antd';\r\n\r\nimport { Row, Col } from 'antd';\r\nimport '../App.css'\r\nimport { Input } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { textBoxUpperChange, textBoxLowerChange, btnClicked, clear } from '../actions'\r\nimport store from '../store'\r\nimport { Tooltip } from 'antd';\r\nimport { CopyOutlined, InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { notification, Divider } from 'antd';\r\nimport {\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    GithubOutlined,\r\n    QuestionCircleOutlined,\r\n  } from '@ant-design/icons';\r\n  \r\nimport  InstructionModal  from './InstructionModal';\r\nimport Cookies from 'js-cookie';\r\nimport { Switch } from 'antd';\r\nimport { Typography } from 'antd';\r\nconst { TextArea } = Input;\r\nconst Context = React.createContext({ name: 'Default' });\r\nconst { Paragraph } = Typography;\r\n\r\nvar localState = {        \r\n    inputUpper : \"\",\r\n    inputLower : \"\"\r\n};\r\n\r\nconst unsubscribe = store.subscribe( \r\n    () => {localState = (store.getState()); console.log(store.getState()); console.log(localState)}\r\n    )\r\n\r\n\r\n\r\nconst HomePage = ({ dispatch, inputUpper, inputLower }) =>{\r\n\r\n    \r\n    const [instructionDialog, setInstructionDialog] = useState(false);\r\n    const [textbox, setTextbox] = useState(true);\r\n    const textAreaRef = useRef(null);\r\n    const [api, contextHolder] = notification.useNotification();\r\n    const openNotification = text => {\r\n        api.info({\r\n            message: text,\r\n        //   description: <Context.Consumer>{({ name }) => `Hello, ${name}!`}</Context.Consumer>,\r\n            placement: 'topRight',\r\n        });\r\n        };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!Cookies.get('showInstruction')){ //if this is first visit on a page\r\n            Cookies.set('showInstruction', true);\r\n            console.log(\"Pokaz instrukcje\");\r\n            setInstructionDialog(true);\r\n        }\r\n        }, []);\r\n\r\n    const showInstructions = () => {\r\n        setInstructionDialog(true);\r\n\r\n    }\r\n    const copyToClipboard = () => {\r\n        \r\n        let textToCopy = inputLower;\r\n        if(textToCopy.length>0){\r\n            const textField = document.createElement('textarea');\r\n            textField.innerText = textToCopy;\r\n            document.body.appendChild(textField);\r\n            textField.select();\r\n            document.execCommand('copy');\r\n            textField.remove();\r\n            openNotification('Copied successfully');\r\n        }\r\n        else{\r\n            openNotification('Nothing to copy!');\r\n        }\r\n        \r\n      };\r\n    const onChange = (e) => {\r\n        setTextbox(e);\r\n    }\r\n\r\n\r\n    let LowerInput;\r\n    if(textbox){\r\n        LowerInput = (<Col flex={1}  >\r\n        <div class = \"textArea-wrapper\" >\r\n            \r\n             <TextArea  onChange={(e) => dispatch(textBoxLowerChange(e.target.value))} \r\n                ref={textAreaRef}\r\n                value = {inputLower}   \r\n                autoSize={{ minRows: 5, maxRows: 15 }}\r\n            />\r\n            \r\n        </div>\r\n    </Col>)\r\n    }\r\n    else {\r\n        LowerInput = (<Col flex={1}  >\r\n            <div class = \"textArea-wrapper\" >\r\n                {inputLower.split('\\n').map((text) => \r\n                    <p><a href={text} target=\"_blank\">\r\n                        {text}\r\n                    </a></p>\r\n                )}\r\n            </div>\r\n        </Col>);\r\n    }\r\n\r\n    \r\n    return(\r\n    <Context.Provider value={{ name: 'Ant Design' }}> {contextHolder}\r\n    <Row>\r\n        <InstructionModal open = {instructionDialog} \r\n        setInstructionDialog = {setInstructionDialog}\r\n        ></InstructionModal>\r\n        <Col flex={1}   >\r\n            <Row justify=\"center\" >\r\n                <Col flex={1} >\r\n                    <PageHeader \r\n                        style = {{whiteSpace: 'nowrap'}}\r\n                        title = \"Aliexpress Link Fixer\" \r\n                        // subTitle=\"Just paste ugly aliexpress link and get beautiful one! Works for links with garbage, referrals and trackers as well as links from app \"\r\n                        extra = {\r\n                        <div >\r\n                            \r\n                            <QuestionCircleOutlined className = \"icon\" \r\n                            onClick = {showInstructions}/>\r\n                            <a href = 'https://github.com/ogigg/AliexpressLinkExtractor' className = \"icon\"><GithubOutlined/></a>\r\n\r\n                        </div>\r\n                        }\r\n                    >\r\n                        <div style= {{whiteSpace: 'normal'}}>\r\n                            Just paste ugly aliexpress link and get beautiful one! Works for links with garbage, referrals and trackers as well as links from app\r\n                        </div>\r\n                        \r\n                        \r\n                    </PageHeader>\r\n                </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                <Col flex={1} >\r\n                    <div class = \"textArea-wrapper\">\r\n                        <TextArea  value = {inputUpper} \r\n                        autoSize={{ minRows: 5, maxRows: 15 }}\r\n                        onChange={ (e) => dispatch(textBoxUpperChange(e.target.value))}/>\r\n                    </div> \r\n                </Col>\r\n                </Row>\r\n\r\n                <Row justify=\"center\" align=\"middle\">\r\n                    {/* <Col span={15} > */}\r\n                    <Col xs={{ span: 5, offset: 0 }} lg={{ span: 15 }} flex=\"auto\">\r\n                        <div class = \"textArea-wrapper\" >\r\n                            <Button block type=\"primary\" style = {{minWidth : '70px'}}\r\n                            styles = {{whiteSpace: 'normal', wordWrap:' break-word'}} \r\n                            onClick = {e => handleClick()} >Fix it!</Button>\r\n                        </div>\r\n                    </Col>\r\n                    {/* <Col span={3}> */}\r\n                    <Col xs={{ span: 5, offset: 0 }} lg={{ span: 3 }} flex=\"auto\">\r\n                        <div class = \"textArea-wrapper\" >\r\n                            <Button block  style = {{minWidth : '70px'}}\r\n                            onClick = {e => {dispatch(clear()); console.log(store.getState()); }}>\r\n                                Clear It!\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                    {/* <Col span={3}> */}\r\n                    <Col xs={{ span: 5, offset: 0 }} lg={{ span: 3 }} flex=\"auto\">\r\n                        <div class = \"textArea-wrapper\" >\r\n                            <Button block style = {{minWidth : '70px'}}\r\n                            onClick = {copyToClipboard}\r\n                            >\r\n                                Copy It!\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                    {/* <Col span={3}> */}\r\n                    <Col xs={{ span: 8, offset: 0 }} lg={{ span: 3 }} flex=\"auto\">\r\n                        <Row justify=\"space-around\">\r\n                            Clickable\r\n                            <Switch defaultChecked onChange={onChange} /> \r\n                            Text\r\n                        </Row>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                {LowerInput}\r\n                \r\n            </Row>\r\n        </Col>\r\n    </Row>\r\n    </Context.Provider>\r\n    );\r\n    };\r\n\r\nconst fixLinks = (input) => {\r\n    let regexp = /aliexpress\\.com\\/item\\/\\d+\\.html/g;\r\n    // var linksFoundArray = input.matchAll(regexp);\r\n    let linksFoundArray = [...input.matchAll(regexp)];\r\n    let fixedLinksArray = [];\r\n    regexp = /.\\.aliexpress\\.com\\/\\_.+/g;\r\n    let shareLinksFoundArray = [...input.matchAll(regexp)]; //share link looks like that https://a.aliexpress.com/_d9leh4R\r\n    \r\n    let returnedString = \"\";\r\n    let shareLinksString = \"\";\r\n    console.log(shareLinksFoundArray);\r\n \r\n    linksFoundArray.map(link => {\r\n        returnedString = returnedString + \"https://www.\" + link[0] + '\\n';\r\n        fixedLinksArray.push(\"https://www.\" + link[0]);\r\n        console.log(link[0]);\r\n    })\r\n\r\n    const promises = shareLinksFoundArray.map(async link => {\r\n        const url = await getUrlFromSharedLink(\"https://cors-anywhere.herokuapp.com/https://\"+ link);\r\n        return url;\r\n    })\r\n    // console.log(promises)\r\n    console.log(fixedLinksArray)\r\n    \r\n    promises.map(async promise => {\r\n        const url = await promise;\r\n        // console.log(url);\r\n        fixedLinksArray.push(\"https://\" + url)\r\n        shareLinksString = shareLinksString + \"https://\" + url + '\\n';\r\n        store.dispatch(textBoxLowerChange(returnedString + shareLinksString));\r\n        // returnedString=returnedString+'\\n'+url;\r\n\r\n    })\r\n    return returnedString;\r\n}\r\n\r\n\r\nasync function getUrlFromSharedLink(url) {\r\n    function createCORSRequest(method, url) {\r\n        var xhr = new XMLHttpRequest();\r\n        if (\"withCredentials\" in xhr) {\r\n        // XHR for Chrome/Firefox/Opera/Safari.\r\n        xhr.open(method, url, true);\r\n        } \r\n        return xhr;\r\n    }\r\n      \r\n      // Helper method to parse the title tag from the response.\r\n    function getUrl(text) {\r\n        let regexp = /<meta property=.og:url. content=...(.*)?\\?/g;\r\n        return regexp.exec(text)[1]\r\n    }\r\n    return new Promise(function (resolve, reject) {      \r\n        let xhr = createCORSRequest('GET', url);\r\n        console.log('starting cors rq')\r\n        // Response handlers.\r\n        let desiredUrl = ''\r\n        xhr.onload = function() {\r\n            var text = xhr.responseText;\r\n            desiredUrl = getUrl(text);\r\n            console.log(\"Funkcja pytajaca: \" + desiredUrl)\r\n            resolve(desiredUrl);\r\n            return desiredUrl\r\n        };\r\n        xhr.send();\r\n    });\r\n      \r\n    //   return desiredUrl\r\n}\r\n\r\nconst handleClick = () => {\r\n    let inputUpper = store.getState().inputUpper;\r\n    \r\n    let inputLower = fixLinks(inputUpper);\r\n    store.dispatch(textBoxLowerChange(inputLower));\r\n\r\n    // store.dispatch(btnClicked()); console.log(store.getState());\r\n    return \"TEST\";\r\n  }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inputUpper : state.inputUpper,\r\n        inputLower : state.inputLower\r\n    }\r\n  }\r\n\r\nexport default  connect(mapStateToProps)(HomePage)\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport HomePage from './Components/HomePage';\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst TITLE = 'Aliexpress Link Fixer';\r\n\r\n\r\n// import {\r\n//   addTodo,\r\n//   toggleTodo,\r\n//   setVisibilityFilter,\r\n//   VisibilityFilters\r\n// } from './actions'\r\n\r\nfunction App() {\r\n// Log the initial state\r\n// console.log(store.getState())\r\n\r\n// // Every time the state changes, log it\r\n// // Note that subscribe() returns a function for unregistering the listener\r\n// const unsubscribe = store.subscribe(() => console.log(store.getState()))\r\n\r\n// // Dispatch some actions\r\n// store.dispatch(addTodo('Learn about actions'))\r\n// store.dispatch(addTodo('Learn about reducers'))\r\n// store.dispatch(addTodo('Learn about store'))\r\n// store.dispatch(toggleTodo(0))\r\n// store.dispatch(toggleTodo(1))\r\n// store.dispatch(setVisibilityFilter(VisibilityFilters.SHOW_COMPLETED))\r\n\r\n// // Stop listening to state updates\r\n// unsubscribe()\r\n\r\nuseEffect(() => {\r\n  document.title = TITLE\r\n}, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n  <Provider store = {store}>\r\n    <title>{ TITLE }</title>\r\n    <HomePage/>\r\n    \r\n  </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}