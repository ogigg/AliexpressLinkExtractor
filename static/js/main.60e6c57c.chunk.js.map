{"version":3,"sources":["actions.js","reducers.js","store.js","Components/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["textBoxLowerChange","text","type","initialState","inputUpper","inputLower","inputText","state","action","Object","assign","store","createStore","TextArea","Input","Context","React","createContext","name","localState","subscribe","getState","console","log","getUrlFromSharedLink","url","createCORSRequest","getUrl","a","exec","method","xhr","XMLHttpRequest","open","Promise","resolve","reject","desiredUrl","onload","responseText","send","handleClick","input","regexp","linksFoundArray","matchAll","shareLinksFoundArray","returnedString","shareLinksString","map","link","promises","promise","dispatch","fixLinks","connect","notification","useNotification","api","contextHolder","textAreaRef","useRef","openNotification","info","message","placement","Provider","value","flex","class","justify","title","subTitle","extra","href","GithubOutlined","autoSize","minRows","maxRows","onChange","e","target","span","block","styles","whiteSpace","wordWrap","onClick","textToCopy","current","length","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyToClipboard","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.60e6c57c.chunk.js","sourcesContent":["export const CHANGE_TBXUPPER = 'CHANGE_TBXUPPER'\r\nexport const CHANGE_TBXLOWER = 'CHANGE_TBXLOWER'\r\nexport const FIX_IT = 'FIX_IT'\r\nexport const CLEAR = 'CLEAR'\r\n\r\n\r\n/*\r\n * other constants\r\n */\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function textBoxUpperChange(text) {\r\n    return { type: CHANGE_TBXUPPER, text }\r\n  }\r\nexport function textBoxLowerChange(text) {\r\n    return { type: CHANGE_TBXLOWER, text }\r\n  }\r\nexport function btnClicked() {\r\n    return { type: FIX_IT }\r\n  }\r\nexport function clear() {\r\n    return { type: CLEAR }\r\n  }\r\n\r\n// export function addTodo(text) {\r\n//   return { type: ADD_TODO, text }\r\n// }\r\n\r\n// export function toggleTodo(index) {\r\n//   return { type: TOGGLE_TODO, index }\r\n// }\r\n\r\n// export function setVisibilityFilter(filter) {\r\n//   return { type: SET_VISIBILITY_FILTER, filter }\r\n// }","import {  CHANGE_TBXUPPER,  CHANGE_TBXLOWER, FIX_IT, CLEAR } from './actions'\r\n\r\n\r\n\r\n\r\nconst initialState = {inputUpper : \"paste link here\", inputLower : \"\"}\r\n// const initialState = {inputUpper : \"https://pl.aliexpress.com/item/32787862558.html?af=3655323&cv=36268018&cn=43q71mdx04jc5bheft2sggk8kuc4c8b7&dp=v5_43q71mdx04jc5bheft2sggk8kuc4c8b7&utm_source=epn&utm_medium=cpa&utm_campaign=3655323&utm_content=36268018&afref=https%3A%2F%2Fali.zacenta.pl%2Fnowe%2F&aff_platform=api&sk=CHRNZDvW&aff_trace_key=76456ce0fbc54606826494c2b12ed8bd-1583953557541-03460-CHRNZDvW&terminal_id=7b9d09c431664beeae9d079a1be37929&aff_request_id=76456ce0fbc54606826494c2b12ed8bd-1583953557541-03460-CH\"\r\n// const initialState = {inputUpper : \"https://pl.aliexpress.com/item/32787862558.html?af=3655323&cv=36268018&cn=43q71mdx04jc5bheft2sggk8kuc4c8b7&dp=v5_43q71mdx04jc5bheft2sggk8kuc4c8b7&utm_source=epn&utm_medium=cpa&utm_campaign=3655323&utm_content=36268018&afref=https%3A%2F%2Fali.zacenta.pl%2Fnowe%2F&aff_platform=api&sk=CHRNZDvW&aff_trace_key=76456ce0fbc54606826494c2b12ed8bd-1583953557541-03460-CHRNZDvW&terminal_id=7b9d09c431664beeae9d079a1be37929&aff_request_id=76456ce0fbc54606826494c2b12ed8bd-1583953557541-03460-CH\\nhttps://a.aliexpress.com/_d9leh4R\"\r\n// , inputLower : \"\"}\r\n\r\nfunction inputText(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHANGE_TBXUPPER:\r\n            return Object.assign({}, state, {\r\n                inputUpper: action.text\r\n                })\r\n        case CHANGE_TBXLOWER:\r\n            return Object.assign({}, state, {\r\n                inputLower: action.text\r\n                })\r\n        case FIX_IT:\r\n            return Object.assign({}, state, {\r\n                inputLower: state.inputUpper\r\n                })\r\n        case CLEAR:\r\n            return Object.assign({}, state, {\r\n                inputUpper:\"paste link here\",\r\n                inputLower: \"\"\r\n                })\r\n        default:\r\n        return state\r\n\r\n    // For now, don't handle any actions\r\n    // and just return the state given to us.\r\n    return state\r\n  }\r\n}\r\n\r\nexport default inputText","import { createStore } from 'redux'\r\nimport inputText from './reducers'\r\n\r\n\r\nconst store = createStore(inputText)\r\nexport default store;","import React, { useRef, useState } from 'react';\r\nimport { Layout, PageHeader, Breadcrumb, Button } from 'antd';\r\n\r\nimport { Row, Col } from 'antd';\r\nimport '../App.css'\r\nimport { Input } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { textBoxUpperChange, textBoxLowerChange, btnClicked, clear } from '../actions'\r\nimport store from '../store'\r\nimport { Tooltip } from 'antd';\r\nimport { CopyOutlined, InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { notification, Divider } from 'antd';\r\nimport {\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    GithubOutlined,\r\n  } from '@ant-design/icons';\r\n  \r\n\r\nconst { TextArea } = Input;\r\nconst Context = React.createContext({ name: 'Default' });\r\n\r\n\r\nvar localState = {        \r\n    inputUpper : \"\",\r\n    inputLower : \"\"\r\n};\r\n\r\nconst unsubscribe = store.subscribe(\r\n    () => {localState = (store.getState()); console.log(store.getState()); console.log(localState)}\r\n    )\r\n\r\n\r\nconst HomePage = ({ dispatch, inputUpper, inputLower }) =>{\r\n\r\n    const [api, contextHolder] = notification.useNotification();\r\n\r\n    const textAreaRef = useRef(null);\r\n\r\n    const openNotification = text => {\r\n        api.info({\r\n          message: text,\r\n        //   description: <Context.Consumer>{({ name }) => `Hello, ${name}!`}</Context.Consumer>,\r\n          placement: 'topRight',\r\n        });\r\n      };\r\n\r\n    \r\n    const copyToClipboard = () => {\r\n        \r\n        let textToCopy = textAreaRef.current.state.value;\r\n        if(textToCopy.length>0){\r\n            const textField = document.createElement('textarea');\r\n            textField.innerText = textToCopy;\r\n            document.body.appendChild(textField);\r\n            textField.select();\r\n            document.execCommand('copy');\r\n            textField.remove();\r\n            openNotification('Copied successfully');\r\n        }\r\n        else{\r\n            openNotification('Nothing to copy!');\r\n        }\r\n        \r\n      };\r\n\r\n    return(\r\n    <Context.Provider value={{ name: 'Ant Design' }}> {contextHolder}\r\n    <Row>\r\n        <Col flex={1}  class = \"test\" >\r\n            <Row justify=\"center\" >\r\n                <Col flex={1} >\r\n                    <PageHeader \r\n                        title = \"Aliexpress Link Fixer\" \r\n                        subTitle=\"Just paste ugly aliexpress link and get beautiful one! Works for trashy links and links from app\"\r\n                        extra = {\r\n                        <a href = 'https://github.com/ogigg/AliexpressLinkExtractor'><GithubOutlined/></a>}\r\n                    />\r\n                </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                <Col flex={1} >\r\n                    <div class = \"textArea-wrapper\">\r\n                        <TextArea  value = {inputUpper} \r\n                        autoSize={{ minRows: 5, maxRows: 15 }}\r\n                        onChange={ (e) => dispatch(textBoxUpperChange(e.target.value))}/>\r\n                    </div> \r\n                </Col>\r\n                </Row>\r\n\r\n                <Row justify=\"center\">\r\n                    <Col span={18} >\r\n                        <div class = \"textArea-wrapper\" >\r\n                            <Button block type=\"primary\"\r\n                            styles = {{whiteSpace: 'normal', wordWrap:' break-word'}} \r\n                            onClick = {e => handleClick()} >Fix it!</Button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={3}>\r\n                        <div class = \"textArea-wrapper\" >\r\n                            <Button block  \r\n                            onClick = {e => {dispatch(clear()); console.log(store.getState()); }}>\r\n                                Clear It!\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={3}>\r\n                        <div class = \"textArea-wrapper\" >\r\n                            <Button block \r\n                            onClick = {e => {copyToClipboard();  }}\r\n                            // onClick={ (e) =>  openNotification('Copied successfully')}\r\n                            >\r\n                                Copy It!\r\n                            </Button>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                <Col flex={1}  >\r\n                    <div class = \"textArea-wrapper\" >\r\n                        \r\n                         <TextArea  onChange={(e) => dispatch(textBoxLowerChange(e.target.value))} \r\n                            ref={textAreaRef}\r\n                            value = {inputLower}   \r\n                            autoSize={{ minRows: 5, maxRows: 15 }}\r\n                        />\r\n                        \r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    </Row>\r\n    </Context.Provider>\r\n    );\r\n    };\r\n\r\nconst fixLinks = (input) => {\r\n    let regexp = /aliexpress\\.com\\/item\\/\\d+\\.html/g;\r\n    // var linksFoundArray = input.matchAll(regexp);\r\n    let linksFoundArray = [...input.matchAll(regexp)];\r\n    regexp = /.\\.aliexpress\\.com\\/\\_.+/g;\r\n    let shareLinksFoundArray = [...input.matchAll(regexp)]; //share link looks like that https://a.aliexpress.com/_d9leh4R\r\n    \r\n    let returnedString = \"\";\r\n    let shareLinksString = \"\";\r\n    console.log(shareLinksFoundArray);\r\n \r\n    linksFoundArray.map(link => {\r\n        returnedString = returnedString + \"https://www.\" + link[0] + '\\n';\r\n        console.log(link[0]);\r\n    })\r\n    const promises = shareLinksFoundArray.map(async link => {\r\n        const url = await getUrlFromSharedLink(\"https://cors-anywhere.herokuapp.com/https://\"+ link);\r\n        return url;\r\n    })\r\n    console.log(promises)\r\n    promises.map(async promise => {\r\n        const url = await promise;\r\n        console.log(url);\r\n        shareLinksString = shareLinksString + \"https://\" + url + '\\n';\r\n        store.dispatch(textBoxLowerChange(returnedString + shareLinksString));\r\n        // returnedString=returnedString+'\\n'+url;\r\n\r\n    })\r\n    return returnedString;\r\n}\r\n\r\n\r\nasync function getUrlFromSharedLink(url) {\r\n    function createCORSRequest(method, url) {\r\n        var xhr = new XMLHttpRequest();\r\n        if (\"withCredentials\" in xhr) {\r\n        // XHR for Chrome/Firefox/Opera/Safari.\r\n        xhr.open(method, url, true);\r\n        } \r\n        return xhr;\r\n    }\r\n      \r\n      // Helper method to parse the title tag from the response.\r\n    function getUrl(text) {\r\n        let regexp = /<meta property=.og:url. content=...(.*)?\\?/g;\r\n        return regexp.exec(text)[1]\r\n    }\r\n    return new Promise(function (resolve, reject) {      \r\n        let xhr = createCORSRequest('GET', url);\r\n        console.log('starting cors rq')\r\n        // Response handlers.\r\n        let desiredUrl = ''\r\n        xhr.onload = function() {\r\n            var text = xhr.responseText;\r\n            desiredUrl = getUrl(text);\r\n            console.log(\"Funkcja pytajaca: \" + desiredUrl)\r\n            resolve(desiredUrl);\r\n            return desiredUrl\r\n        };\r\n        xhr.send();\r\n    });\r\n      \r\n    //   return desiredUrl\r\n}\r\n\r\nconst handleClick = () => {\r\n    let inputUpper = store.getState().inputUpper;\r\n    \r\n    let inputLower = fixLinks(inputUpper);\r\n    store.dispatch(textBoxLowerChange(inputLower));\r\n\r\n    // store.dispatch(btnClicked()); console.log(store.getState());\r\n    return \"TEST\";\r\n  }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inputUpper : state.inputUpper,\r\n        inputLower : state.inputLower\r\n    }\r\n  }\r\n\r\nexport default  connect(mapStateToProps)(HomePage)\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport HomePage from './Components/HomePage';\nimport \"antd/dist/antd.css\";\n// import {\n//   addTodo,\n//   toggleTodo,\n//   setVisibilityFilter,\n//   VisibilityFilters\n// } from './actions'\n\nfunction App() {\n// Log the initial state\n// console.log(store.getState())\n\n// // Every time the state changes, log it\n// // Note that subscribe() returns a function for unregistering the listener\n// const unsubscribe = store.subscribe(() => console.log(store.getState()))\n\n// // Dispatch some actions\n// store.dispatch(addTodo('Learn about actions'))\n// store.dispatch(addTodo('Learn about reducers'))\n// store.dispatch(addTodo('Learn about store'))\n// store.dispatch(toggleTodo(0))\n// store.dispatch(toggleTodo(1))\n// store.dispatch(setVisibilityFilter(VisibilityFilters.SHOW_COMPLETED))\n\n// // Stop listening to state updates\n// unsubscribe()\n  return (\n  <Provider store = {store}>\n\n    <HomePage/>\n    \n  </Provider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}